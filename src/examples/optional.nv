// a normal string
let name: string = "Navi";

// an optional string
let optional_name: string? = "Navi";
let optional_name: string? = nil;

fn main() throws {
    let name: string? = "Navi";
    // This is ok.
    println(name!);
    // This is also ok.
    println(name.unwrap());
    println(name.expect("Name is nil"));
    println(name.map(|name| {
        return `Name length: ${name.len()}`;
    }));
    println(name.and("And other name"));
    println(name.and_then(|name| {
        return `And then name: ${name}`;
    }));

    let name: string? = nil;
    println(`name is nil: ${name.is_nil()}`);
    println(name.map_or("Default value", |name| name.len()));
    println(name.unwrap_or("unwrap_or a default value"));
    println(name.or("Or a default value"));
    println(name.or_else(|| "Or else a default value"));

    // This will cause a panic.
    println(name!);
}

test "unwrap or default" {
    let name: string? = "Navi";
    let result = name || "";
    // result is a string type
    assert_eq result, "Navi";

    let name: string? = nil;
    let result = name || "";
    // result is a string type
    assert_eq result, "";
}
